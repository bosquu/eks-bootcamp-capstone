"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdotCollectorAddOn = void 0;
const core_addon_1 = require("../core-addon");
const iam_policy_1 = require("./iam-policy");
const utils_1 = require("../../utils");
const aws_eks_1 = require("aws-cdk-lib/aws-eks");
const cert_manager_1 = require("../cert-manager");
const defaultProps = {
    addOnName: 'adot',
    version: 'v0.51.0-eksbuild.1',
    saName: 'adot-collector',
    policyDocumentProvider: iam_policy_1.getAdotCollectorPolicyDocument,
    namespace: 'default'
};
/**
 * Implementation of Adot Collector EKS add-on.
 */
class AdotCollectorAddOn extends core_addon_1.CoreAddOn {
    constructor(props) {
        super({ ...defaultProps, ...props });
    }
    deploy(clusterInfo) {
        const cluster = clusterInfo.cluster;
        // Applying ADOT Permission manifest
        const otelPermissionsDoc = (0, utils_1.readYamlDocument)(__dirname + '/otel-permissions.yaml');
        const otelPermissionsManifest = otelPermissionsDoc.split("---").map(e => (0, utils_1.loadYaml)(e));
        const otelPermissionsStatement = new aws_eks_1.KubernetesManifest(cluster.stack, "adot-addon-otelPermissions", {
            cluster,
            manifest: otelPermissionsManifest,
            overwrite: true
        });
        const addOnPromise = super.deploy(clusterInfo);
        addOnPromise.then(addOn => addOn.node.addDependency(otelPermissionsStatement));
        return addOnPromise;
    }
}
__decorate([
    (0, utils_1.dependable)(cert_manager_1.CertManagerAddOn.name)
], AdotCollectorAddOn.prototype, "deploy", null);
exports.AdotCollectorAddOn = AdotCollectorAddOn;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvYWRkb25zL2Fkb3QvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsOENBQTBEO0FBRTFELDZDQUE4RDtBQUM5RCx1Q0FBcUU7QUFDckUsaURBQXlEO0FBRXpELGtEQUFtRDtBQU9uRCxNQUFNLFlBQVksR0FBRztJQUNqQixTQUFTLEVBQUUsTUFBTTtJQUNqQixPQUFPLEVBQUUsb0JBQW9CO0lBQzdCLE1BQU0sRUFBRSxnQkFBZ0I7SUFDeEIsc0JBQXNCLEVBQUUsMkNBQThCO0lBQ3RELFNBQVMsRUFBRSxTQUFTO0NBQ3ZCLENBQUM7QUFFRDs7R0FFRztBQUNKLE1BQWEsa0JBQW1CLFNBQVEsc0JBQVM7SUFFN0MsWUFBWSxLQUErQjtRQUN2QyxLQUFLLENBQUMsRUFBRSxHQUFHLFlBQVksRUFBRSxHQUFHLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVELE1BQU0sQ0FBQyxXQUF3QjtRQUUzQixNQUFNLE9BQU8sR0FBRyxXQUFXLENBQUMsT0FBTyxDQUFDO1FBQ3BDLG9DQUFvQztRQUNwQyxNQUFNLGtCQUFrQixHQUFHLElBQUEsd0JBQWdCLEVBQUMsU0FBUyxHQUFHLHdCQUF3QixDQUFDLENBQUM7UUFDbEYsTUFBTSx1QkFBdUIsR0FBRyxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBQSxnQkFBUSxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdEYsTUFBTSx3QkFBd0IsR0FBRyxJQUFJLDRCQUFrQixDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsNEJBQTRCLEVBQUU7WUFDakcsT0FBTztZQUNQLFFBQVEsRUFBRSx1QkFBdUI7WUFDakMsU0FBUyxFQUFFLElBQUk7U0FDbEIsQ0FBQyxDQUFDO1FBRUgsTUFBTSxZQUFZLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMvQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxDQUFDO1FBQy9FLE9BQU8sWUFBWSxDQUFDO0lBQ3hCLENBQUM7Q0FDSjtBQWhCRztJQURDLElBQUEsa0JBQVUsRUFBQywrQkFBZ0IsQ0FBQyxJQUFJLENBQUM7Z0RBZ0JqQztBQXJCTCxnREFzQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb3JlQWRkT24sIENvcmVBZGRPblByb3BzIH0gZnJvbSBcIi4uL2NvcmUtYWRkb25cIjtcbmltcG9ydCB7IENsdXN0ZXJJbmZvIH0gZnJvbSBcIi4uLy4uL3NwaVwiO1xuaW1wb3J0IHsgZ2V0QWRvdENvbGxlY3RvclBvbGljeURvY3VtZW50IH0gZnJvbSBcIi4vaWFtLXBvbGljeVwiO1xuaW1wb3J0IHsgZGVwZW5kYWJsZSwgbG9hZFlhbWwsIHJlYWRZYW1sRG9jdW1lbnQgfSBmcm9tIFwiLi4vLi4vdXRpbHNcIjtcbmltcG9ydCB7IEt1YmVybmV0ZXNNYW5pZmVzdCB9IGZyb20gXCJhd3MtY2RrLWxpYi9hd3MtZWtzXCI7XG5pbXBvcnQgeyBDb25zdHJ1Y3QgfSBmcm9tICdjb25zdHJ1Y3RzJztcbmltcG9ydCB7IENlcnRNYW5hZ2VyQWRkT24gfSBmcm9tIFwiLi4vY2VydC1tYW5hZ2VyXCI7XG5cbi8qKlxuICogQ29uZmlndXJhdGlvbiBvcHRpb25zIGZvciB0aGUgQWRvdCBhZGQtb24uXG4gKi9cbnR5cGUgQWRvdENvbGxlY3RvckFkZE9uUHJvcHMgPSBDb3JlQWRkT25Qcm9wcztcblxuY29uc3QgZGVmYXVsdFByb3BzID0ge1xuICAgIGFkZE9uTmFtZTogJ2Fkb3QnLFxuICAgIHZlcnNpb246ICd2MC41MS4wLWVrc2J1aWxkLjEnLFxuICAgIHNhTmFtZTogJ2Fkb3QtY29sbGVjdG9yJyxcbiAgICBwb2xpY3lEb2N1bWVudFByb3ZpZGVyOiBnZXRBZG90Q29sbGVjdG9yUG9saWN5RG9jdW1lbnQsXG4gICAgbmFtZXNwYWNlOiAnZGVmYXVsdCdcbn07XG5cbiAvKipcbiAgKiBJbXBsZW1lbnRhdGlvbiBvZiBBZG90IENvbGxlY3RvciBFS1MgYWRkLW9uLlxuICAqL1xuZXhwb3J0IGNsYXNzIEFkb3RDb2xsZWN0b3JBZGRPbiBleHRlbmRzIENvcmVBZGRPbiB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm9wcz86IEFkb3RDb2xsZWN0b3JBZGRPblByb3BzKSB7XG4gICAgICAgIHN1cGVyKHsgLi4uZGVmYXVsdFByb3BzLCAuLi5wcm9wcyB9KTtcbiAgICB9XG4gICAgQGRlcGVuZGFibGUoQ2VydE1hbmFnZXJBZGRPbi5uYW1lKVxuICAgIGRlcGxveShjbHVzdGVySW5mbzogQ2x1c3RlckluZm8pOiBQcm9taXNlPENvbnN0cnVjdD4gIHtcblxuICAgICAgICBjb25zdCBjbHVzdGVyID0gY2x1c3RlckluZm8uY2x1c3RlcjtcbiAgICAgICAgLy8gQXBwbHlpbmcgQURPVCBQZXJtaXNzaW9uIG1hbmlmZXN0XG4gICAgICAgIGNvbnN0IG90ZWxQZXJtaXNzaW9uc0RvYyA9IHJlYWRZYW1sRG9jdW1lbnQoX19kaXJuYW1lICsgJy9vdGVsLXBlcm1pc3Npb25zLnlhbWwnKTtcbiAgICAgICAgY29uc3Qgb3RlbFBlcm1pc3Npb25zTWFuaWZlc3QgPSBvdGVsUGVybWlzc2lvbnNEb2Muc3BsaXQoXCItLS1cIikubWFwKGUgPT4gbG9hZFlhbWwoZSkpO1xuICAgICAgICBjb25zdCBvdGVsUGVybWlzc2lvbnNTdGF0ZW1lbnQgPSBuZXcgS3ViZXJuZXRlc01hbmlmZXN0KGNsdXN0ZXIuc3RhY2ssIFwiYWRvdC1hZGRvbi1vdGVsUGVybWlzc2lvbnNcIiwge1xuICAgICAgICAgICAgY2x1c3RlcixcbiAgICAgICAgICAgIG1hbmlmZXN0OiBvdGVsUGVybWlzc2lvbnNNYW5pZmVzdCxcbiAgICAgICAgICAgIG92ZXJ3cml0ZTogdHJ1ZVxuICAgICAgICB9KTtcblxuICAgICAgICBjb25zdCBhZGRPblByb21pc2UgPSBzdXBlci5kZXBsb3koY2x1c3RlckluZm8pO1xuICAgICAgICBhZGRPblByb21pc2UudGhlbihhZGRPbiA9PiBhZGRPbi5ub2RlLmFkZERlcGVuZGVuY3kob3RlbFBlcm1pc3Npb25zU3RhdGVtZW50KSk7XG4gICAgICAgIHJldHVybiBhZGRPblByb21pc2U7XG4gICAgfVxufVxuIl19